version: 2

references:

 ##Cache

 cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "presentation/build.gradle" }}-{{ checksum "domain/build.gradle" }}-{{ checksum "data/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2

  ## Build debug APK and instrumented test APK

  build_debug:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Gradle build (debug)
          command: ./gradlew -PciBuild=true :domain:assemble assembleDebug assembleAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
          path: presentation/build/outputs/apk/
          destination: /apk/

  ## Run unit tests

  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - run:
          name: Run unit tests
          command: ./gradlew -PciBuild=true :domain:test testDebugUnitTest
      - *persist_debug_workspace
      - store_artifacts:
          path: presentation/build/reports/
          destination: /presentation/reports/
      - store_artifacts:
          path: domain/build/reports/
          destination: /domain/reports/
      - store_artifacts:
          path: data/build/reports/
          destination: /data/reports/
      - store_test_results:
          path: presentation/build/test-results/
          destination: /presentation/test-results/
      - store_test_results:
          path: domain/build/test-results/
          destination: /domain/test-results/
      - store_test_results:
          path: data/build/test-results/
          destination: /data/test-results/

    ## Run instrumented tests

#    test_instrumented:
#    <<: *gcloud_config
#      steps:
#      - *attach_debug_workspace
#      - *export_gcloud_key
#      - *decode_gcloud_key
#      - run:
#          name: Set Google Cloud target project
#          command: gcloud config set project theatre-8b64a
#      - run:
#          name: Authenticate with Google Cloud
#          command: gcloud auth activate-service-account firebase-adminsdk-b1xip@theatre-8b64a.iam.gserviceaccount.com --key-file ${HOME}/client-secret.json
#      - run:
#          name: Run instrumented test on Firebase Test Lab
#          command: gcloud firebase test android run --no-auto-google-login --type instrumentation --app presentation/build/outputs/apk/debug/presentation-debug.apk --test presentation/build/outputs/apk/androidTest/debug/presentation-debug-androidTest.apk --device model=Nexus5X,version=26,locale=en_US,orientation=portrait --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec --directories-to-pull=/sdcard --timeout 20m
#      - run:
#          name: Create directory to store test results
#          command: mkdir firebase
#      - run:
#          name: Download instrumented test results from Firebase Test Lab
#          command: gsutil -m cp -r -U "`gsutil ls gs://test-lab-7nv0x51in57u6-kn0mnshhmuuuu | tail -1`*" /root/workspace/firebase/
#      - *persist_firebase_workspace
#      - store_artifacts:
#          path: firebase/
#          destination: /firebase/

workflows:
  version: 2
  workflow:
    jobs:
      - build_debug
      - test_unit
      - test_instrumented:
          requires:
            - build_debug
      - report_coverage:
          requires:
            - test_unit
            - test_instrumented

